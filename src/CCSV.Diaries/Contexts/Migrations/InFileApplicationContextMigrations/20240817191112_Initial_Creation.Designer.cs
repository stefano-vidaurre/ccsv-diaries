// <auto-generated />
using System;
using CCSV.Diaries.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCSV.Diaries.Contexts.Migrations.InFileApplicationContextMigrations
{
    [DbContext(typeof(InFileApplicationContext))]
    [Migration("20240817191112_Initial_Creation")]
    partial class Initial_Creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("CCSV.Diaries.Models.Diary", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityConcurrencyToken")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntityCreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EntityDeletionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntityEditionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CCSV_Diaries_Diaries", (string)null);
                });

            modelBuilder.Entity("CCSV.Diaries.Models.Entry", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiaryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityConcurrencyToken")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntityCreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EntityDeletionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntityEditionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiaryId");

                    b.ToTable("CCSV_Diaries_Entries", (string)null);
                });

            modelBuilder.Entity("CCSV.Diaries.Models.Entry", b =>
                {
                    b.HasOne("CCSV.Diaries.Models.Diary", null)
                        .WithMany("Entries")
                        .HasForeignKey("DiaryId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CCSV.Diaries.Models.Diary", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
